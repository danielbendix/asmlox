$SECTION(CODE)	
$FUNCTION(op_define_global)
	.cfi_startproc
// %bb.0:
    mov x1, x2
    ldp x2, x3, [sp], #16
    $LOAD_FROM_GOT(x9, vm)
	add	x0, x9, #16 // OFFSETOF VM.globals
	$CALL(b, tableSet)
$END_FUNCTION(op_define_global)
	.cfi_endproc
                                        // -- End function

$FUNCTION(op_get_global)
	.cfi_startproc
// %bb.0:
	sub	sp, sp, #32
	.cfi_def_cfa_offset 32
	stp	x29, x30, [sp]             // 16-byte Folded Spill
	mov	x29, sp
	.cfi_def_cfa w29, 0
	.cfi_offset w30, 8
	.cfi_offset w29, 0
	mov	x1, x0
    $LOAD_FROM_GOT(x8, vm)
	add	x0, x8, #16 // OFFSETOF VM.globals
	add	x2, sp, #16
    $CALL(bl, tableGet)
	tbz	w0, #0, LBB1_2
// %bb.1:
	ldp	x0, x1, [sp, #16]
	ldp	x29, x30, [sp]             // 16-byte Folded Reload
	add	sp, sp, #16
	ret
LBB1_2:
    $LOAD_STRING(x0, l_.str)
    $CALL(bl, runtimeError)
$END_FUNCTION(op_get_global)
	.cfi_endproc
                                        // -- End function

$FUNCTION(op_set_global)
	.cfi_startproc
// %bb.0:
	stp	x20, x19, [sp, #-32]!           // 16-byte Folded Spill
	.cfi_def_cfa_offset 32
	stp	x29, x30, [sp, #16]             // 16-byte Folded Spill
	add	x29, sp, #16
	mov	x20, x2
    ldp x2, x3, [sp, #32] // load value from stack
    $LOAD_FROM_GOT(x8, vm)
	add	x19, x8, #16 // OFFSETOF VM.globals
    mov x0, x19
	mov	x1, x20
    $CALL(bl, tableSet)
	cbnz	w0, LBB2_2
// %bb.1:
	ldp	x29, x30, [sp, #16]             // 16-byte Folded Reload
	ldp	x20, x19, [sp], #32             // 16-byte Folded Reload
    // TODO: We could load the value from the stack here.
	ret
LBB2_2:
	mov	x0, x19
	mov	x1, x20
    $CALL(bl, tableDelete)
    $LOAD_STRING(x0, l_.str)
	add	x0, x0, l_.str@PAGEOFF
    $CALL(bl, runtimeError)
$END_FUNCTION(op_set_global)
	.cfi_endproc
                                        // -- End function
$SECTION(STRINGS)
$STRING(l_.str, "Undefined variable.")

$FOOTER()
